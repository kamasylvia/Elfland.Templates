{
  "Urls": "http://localhost:5000;https://localhost:5001",
  "ReverseProxy": {
    "Routes": {
      "route1": {
        "ClusterId": "cluster1",
        "Match": {
          "Path": "{**catch-all}"
        }
      }
    },
    "Clusters": {
      "cluster1": {
        "Destinations": {
          "destination1": {
            "Address": "https://example.com/"
          }
        }
      }
    }
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "System": "Information",
        "Microsoft": "Information",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore.Database.Command": "Information"
      }
    },
    "WriteTo": [
      //#if (seq)
      {
        "Name": "Seq",
        "Args": {
          "seqServerUrl": "Seq Server Url"
        }
      },
      //#endif
      //#if (exceptionless)
      {
        "Name": "Exceptionless",
        "Args": {
          "apiKey": "Your API key",
          "serverUrl": "Your self-host exceptionless server url.",
          "outputTemplate": "{NewLine}Date：{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel：{Level}{NewLine}Message：{Message}{NewLine}{Exception}"
        }
      },
      //#endif
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "Console",
              "outputTemplate": "{NewLine}Date：{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel：{Level}{NewLine}Message：{Message}{NewLine}{Exception}"
            },
            {
              "Name": "File",
              "Args": {
                "path": "Logs/Log-.txt",
                "outputTemplate": "{NewLine}Date：{Timestamp:yyyy-MM-dd HH:mm:ss.fff}{NewLine}LogLevel：{Level}{NewLine}Message：{Message}{NewLine}{Exception}",
                "rollingInterval": "Day"
              }
            }
          ]
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId"
    ]
  }
}